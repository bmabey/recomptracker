Think hard.

For maximum efficiency, whenever you need to perform multiple independent operations, invoke all relevant tools simultaneously rather than sequentially.

If you create any temporary new files, scripts, or helper files for iteration, clean up these files by removing them at the end of the task.

Please write a high quality, general purpose solution. Implement a solution that works correctly for all valid inputs, not just the test cases. Do not hard-code values or create solutions that only work for specific test inputs. Instead, implement the actual logic that solves the problem generally.

Focus on understanding the problem requirements and implementing the correct algorithm. Tests are there to verify correctness, not to define the solution. Provide a principled implementation that follows best practices and software design principles.

If the task is unreasonable or infeasible, or if any of the tests are incorrect, please tell me. The solution should be robust, maintainable, and extendable.

The feature that needs to be implemented:

I am about ready to release v1 of the web app publically. Once I do that URLs with state will be created and shared. Thus, will be critical to maintain backward capability going forward. To help enable that we should do the following:

1. Create a v1 spec for the URL state as it exists today.
2. Create an integration test that:
a. creates some v1 URL data, encodes it, and then loads it up in the app to ensure the state is properly restored.

This is similar to existing integration tests around the URLs with the change that we want to create a v1 URL manually versus getting it from the app.