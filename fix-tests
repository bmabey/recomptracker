Think hard.

For maximum efficiency, whenever you need to perform multiple independent operations, invoke all relevant tools simultaneously rather than sequentially.

If you create any temporary new files, scripts, or helper files for iteration, clean up these files by removing them at the end of the task.

Please write a high quality, general purpose solution. Implement a solution that works correctly for all valid inputs, not just the test cases. Do not hard-code values or create solutions that only work for specific test inputs. Instead, implement the actual logic that solves the problem generally.

Focus on understanding the problem requirements and implementing the correct algorithm. Tests are there to verify correctness, not to define the solution. Provide a principled implementation that follows best practices and software design principles.

If the task is unreasonable or infeasible, or if any of the tests are incorrect, please tell me. The solution should be robust, maintainable, and extendable.

Your task is get the test suite to be passing (as ran by task test-all).

Follow these steps iteratively:
0. Pull the git log into context so you know what features have been implemented and what the intent has been.
1. Initial test run: run task test-all, noting the failures and file paths.
2. Select Batch: Choose approximately 1-5 of similar errors to fix. Prioritize errors within the same file and simpler errors first.
3. Fix failures: Check to see if the test is still valid. Is it testing a feature or logic we still care about or is it stale? If stale we can delete. Otherwise update the test or fix the logic in the code if the failure is a true failure.
4. Local test Check: Have pytest test just the tests in question to verify the issue has been fixed. If not continue to fix and test locally until this batch of tests are passing.
5. Run Tests: Execute the project's entire test suite to ensure no regressions.
6. Handle Test Failures: If additional tests fail, fix them immediately before proceeding with additional fixes.
7. Git Commit: Commit changes with a descriptive message
8. Repeat: Go back to step 1 and continue the process until all tests are passing or bogus ones have been deleted.
